(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{340:function(t,v,_){"use strict";_.r(v);var a=_(0),e=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("  JavaScript（通常缩写为JS）是一种高级的、解释型的编程语言。JavaScript是一门基于原型、函数先行的语言，是一门多范式的语言，它支持面向对象编程，命令式编程，以及函数式编程。它提供语法来操控文本、数组、日期以及正则表达式等，不支持I/O，比如网络、存储和图形等，但这些都可以由它的宿主环境提供支持。它已经由ECMA（欧洲电脑制造商协会）通过ECMAScript实现语言的标准化。它被世界上的绝大多数网站所使用，也被世界主流浏览器（Chrome、IE、Firefox、Safari、Opera）支持。")]),t._v(" "),v("p",[t._v("  一般使用JavaScript有3种方式，外部引入"),v("code",[t._v("<script src=''xxx.js\"><\/script>")]),t._v("，内部"),v("code",[t._v("<script><\/script>")]),t._v("标签和内部元素标签使用，例如："),v("code",[t._v("<button οnclick=\"alert('javascript的使用')\">")]),t._v("。")]),t._v(" "),v("p",[t._v("一个简单的JavaScript程序:")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v('  <script>window.onload = function () { alert("老陈笔记"); }<\/script>\n')])])]),v("h2",{attrs:{id:"语法基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#语法基础"}},[t._v("#")]),t._v(" 语法基础")]),t._v(" "),v("p",[t._v("1、变量与常量\n在JavaScript中，变量指的是一个可以改变的量。变量类似数学的变量，但用法和语法不同。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("变量名字需要使用者定义命名来灵活使用。")])]),t._v(" "),v("li",[v("p",[t._v("在JavaScript中，给一个变量命名，我们需要遵循以下两个方面的原则。")])])]),t._v(" "),v("p",[t._v(" （1）变量由字母、下划线、$或数字组成，并且第一个字母必须是“字母、下划线或$”。")]),t._v(" "),v("p",[t._v(" （2）变量不能是系统关键字和保留字。\n语法 例如：  var 变量名 = 值；")]),t._v(" "),v("p",[t._v("2、数据类型")]),t._v(" "),v("p",[t._v(" 在JavaScript中，基本数据类型：字符串（String）、数字(Number)、布尔(Boolean)、空（Null）、未定义（Undefined）、Symbol。")]),t._v(" "),v("p",[t._v(" 对象类型：对象(Object)、数组(Array)、函数(Function)，还有两个特殊的对象：正则（RegExp）和日期（Date）。")]),t._v(" "),v("p",[t._v("3、运算符")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("运算符")]),t._v(" "),v("th",[t._v("说明")]),t._v(" "),v("th",[t._v("举例")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("+")]),t._v(" "),v("td",[t._v("加")]),t._v(" "),v("td",[t._v("10+5 //返回15")])]),t._v(" "),v("tr",[v("td",[t._v("－")]),t._v(" "),v("td",[t._v("减")]),t._v(" "),v("td",[t._v("10-5 //返回5")])]),t._v(" "),v("tr",[v("td",[t._v("*")]),t._v(" "),v("td",[t._v("乘")]),t._v(" "),v("td",[t._v("10*5 //返回50")])]),t._v(" "),v("tr",[v("td",[t._v("/")]),t._v(" "),v("td",[t._v("除")]),t._v(" "),v("td",[t._v("10/5 //返回2")])]),t._v(" "),v("tr",[v("td",[t._v("%")]),t._v(" "),v("td",[t._v("求余")]),t._v(" "),v("td",[t._v("10%4 //返回2")])]),t._v(" "),v("tr",[v("td",[t._v("++")]),t._v(" "),v("td",[t._v("自增")]),t._v(" "),v("td",[t._v("var i=10;i++; //返回11")])]),t._v(" "),v("tr",[v("td",[t._v("--")]),t._v(" "),v("td",[t._v("自减")]),t._v(" "),v("td",[t._v("var i=10;i--; //返回9")])]),t._v(" "),v("tr",[v("td",[t._v(">")]),t._v(" "),v("td",[t._v("大于")]),t._v(" "),v("td",[t._v("2>1   //返回true")])]),t._v(" "),v("tr",[v("td",[t._v("<")]),t._v(" "),v("td",[t._v("小于")]),t._v(" "),v("td",[t._v("2<1    //返回false")])]),t._v(" "),v("tr",[v("td",[t._v(">=")]),t._v(" "),v("td",[t._v("大于等于")]),t._v(" "),v("td",[t._v("2>=2   //返回true")])]),t._v(" "),v("tr",[v("td",[t._v("<=")]),t._v(" "),v("td",[t._v("小于等于")]),t._v(" "),v("td",[t._v("2<=2   //返回true")])]),t._v(" "),v("tr",[v("td",[t._v("==")]),t._v(" "),v("td",[t._v("等于")]),t._v(" "),v("td",[t._v("1==2   //返回false")])]),t._v(" "),v("tr",[v("td",[t._v("!=")]),t._v(" "),v("td",[t._v("不等于")]),t._v(" "),v("td",[t._v("1!=2    //返回true")])])])]),t._v(" "),v("p",[t._v("逻辑运算符:"),v("code",[t._v("&&“与”运算; ||\t“或”运算; !“非”运算")])]),t._v(" "),v("p",[t._v("tips:数字 + 数字 = 数字;"),v("br"),t._v("\n  字符串 + 字符串 = 字符串;"),v("br"),t._v("\n  字符串 + 数字 = 字符串。")]),t._v(" "),v("p",[t._v("4、表达式与语句")]),t._v(" "),v("p",[t._v("一个表达式包含“操作数”和“操作符”两部分。操作数可以是变量，也可以是常量。操作符指的就是之前学的运算符。每一个表达式都会产生一个值。")]),t._v(" "),v("p",[t._v("例如：var a =  8+9（8+9是一个表达式）而整一句代码"),v("b",[t._v("var a=8+9 ")]),t._v("就是一个语句了")]),t._v(" "),v("p",[t._v("5、类型转换")]),t._v(" "),v("p",[t._v("类型转换有2种，隐式类型转换和显式类型转换；隐式类型转换，指的是JavaScript自动进行的类型转换。显式类型转换，指的是需要我们手动用代码强制进行的类型转换。")]),t._v(" "),v("p",[t._v("例如：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('字符串转数字，隐式转换：var res = 123+"abc"\n\n显示转换：var res =  Number(" 123 ")\n')])])]),v("p",[v("code",[t._v("tips: console.log(typeof res)判断res数据类型。")])]),t._v(" "),v("h2",{attrs:{id:"流程控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[t._v("#")]),t._v(" 流程控制")]),t._v(" "),v("p",[t._v("  流程控制，是任何一门编程语言都有的一个语法，指的是控制程序按照怎样的顺序执行的。")]),t._v(" "),v("p",[t._v("  在JavaScript中，共有3种流程控制方式")]),t._v(" "),v("p",[t._v("1、"),v("b",[t._v("顺序结构")]),t._v("；在JavaScript中，顺序结构是最基本的结构。所谓的顺序结构，说白了，就是代码按照从上到下、从左到右的“顺序”执行。")]),t._v(" "),v("p",[t._v("2、"),v("b",[t._v("选择结构")]),t._v("；在JavaScript中，选择结构指的是根据“条件判断”来决定使用哪一段代码。选择结构有3种：单项选择、双项选择以及多项选择，但是无论是哪一种，JavaScript都只会执行其中的一个分支。")]),t._v(" "),v("p",[t._v("3、"),v("b",[t._v("循环结构")]),t._v("；指的是根据条件来判断是否重复执行某一段程序。若条件为true，则继续循环；若条件为false，则退出循环。")]),t._v(" "),v("p",[t._v("  顺序结构是js默认的执行方式这里就不说了，说一下选择结构和循环结构吧。")]),t._v(" "),v("p",[v("b",[t._v("选择结构")]),t._v("；共有两种方式：一种是if语句；另外一种是switch语句。")]),t._v(" "),v("ul",[v("li",[t._v("对于if语句，主要包括以下要点：")])]),t._v(" "),v("p",[t._v("（1）单项选择：if…")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("if(条件)\n{\n……\n}\n")])])]),v("p",[t._v("（2）双项选择：if…else…")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("if(条件)\n{\n    ……\n}\nelse\n{\n    ……\n}\n")])])]),v("p",[t._v("（3）多项选择：if…else if…else…")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("if(条件1)\n{\n    //当条件1为true时执行的代码\n}\nelse if(条件2)\n{\n    //当条件2为true时执行的代码\n}\nelse\n{\n    //当条件1和条件2都为false时执行的代码\n}\n")])])]),v("p",[t._v("（4）if语句的嵌套")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("if(条件1)\n{\n    if(条件2)\n    {\n        当“条件1”和“条件2”都为true时执行的代码\n    }\n    else\n    {\n        当“条件1”为true、“条件2”为false时执行的代码\n    }\n}\nelse\n{\n    if(条件2)\n    {\n        当“条件1”为false、“条件2”为true时执行的代码\n    }\n    else\n    {\n        当“条件1”和“条件2”都为false时执行的代码\n    }\n}\n")])])]),v("ul",[v("li",[t._v("对于switch语句：")])]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("switch(判断值)\n{\n    case 取值1:\n        语块1;break;\n    case 取值2:\n        语块2;break;\n    ……\n    case 取值n:\n        语块n;break;\n    default:\n        语句块n+1;\n}\n")])])]),v("p",[t._v("说明：switch是“开关”，case是“情况”，break是“断开”，default是“默认”。switch语句会根据“判断值”来判断，然后来选择使用哪一个case。如果每一个case的取值都不符合，那就执行default的语句。")]),t._v(" "),v("p",[t._v("tips：switch里通常会结合continue/break来使用；continue是跳过本条case，继续执行下一个；而break是执行本case后终止不再执行下一条。")]),t._v(" "),v("p",[v("b",[t._v("循环结构")]),t._v("；共有三种方式：分别是while语句、do…while语句和for语句。")]),t._v(" "),v("ul",[v("li",[t._v("while语句")])]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("while(条件)\n{\n    //当条件为true时，循环执行\n}\n")])])]),v("p",[t._v("说明：如果“条件”返回为true，则会执行大括号{}内部的程序。当执行完大括号{}内部的程序后，会再次判断“条件”。\n如果条件依旧还是true，则会继续重复执行大括号中的程序……循环执行直到条件为false才结束整个循环，然后再接着执行while语句后面的程序。")]),t._v(" "),v("ul",[v("li",[t._v("do…while语句")])]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("do\n{\n    ……\n}while(条件);\n")])])]),v("p",[t._v("说明：\ndo…while语句首先是无条件执行循环体一次，然后再判断是否符合条件。如果符合条件，则重复执行循环体；如果不符合条件，则退出循环。")]),t._v(" "),v("p",[t._v("do…while语句跟while语句是非常相似的，并且任何一个都可以转换成等价的另外一个。")]),t._v(" "),v("p",[t._v("do…while语句结尾处括号后有一个分号（;），该分号一定不能省略，这是初学者最容易忽略的一点。")]),t._v(" "),v("ul",[v("li",[t._v("for语句")])]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("for(初始化表达式; 条件表达式; 循环后操作)\n{\n    ……\n}\n")])])]),v("p",[t._v("说明：在for循环中，首先定义一个用于计数的变量i，其中设i的初始值为0。然后定义一个判断条件i<n；\n只要i小于n就会执行for循环中的程序。最后定义一个循环后的表达式i++，也就是说，每次循环之后都会进行一次i++。")]),t._v(" "),v("h2",{attrs:{id:"函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),v("p",[t._v("  为了减轻重复编码的负担，JavaScript引入了函数的概念。函数一般是在两种种情况下使用：一种是“重复使用的功能”，另外一种是“特定的功能”。")]),t._v(" "),v("p",[t._v("1、在JavaScript中，如果我们想要使用函数，一般只需要简单的2步；定义函数和调用函数。")]),t._v(" "),v("p",[t._v("（1）定义函数")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("定义没有返回值的函数")]),t._v(" "),v("p",[t._v(" 语法：")])])]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("function 函数名(参数1 , 参数2 ,..., 参数n)\n{\n    ……\n}\n")])])]),v("ul",[v("li",[t._v("定义有返回值的函数")])]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("function 函数名(参数1 , 参数2 ,..., 参数n)\n{\n    ……\n    return 返回值;\n}\n")])])]),v("p",[t._v("tips：根据作用域，变量可以分为以下2种，全局变量和局部变量。")]),t._v(" "),v("p",[t._v("  全局变量一般在主程序中定义，其有效范围是从定义开始，一直到整个程序结束为止。说白了，全局变量在任何地方都可以用。")]),t._v(" "),v("p",[t._v("  局部变量一般在函数中定义，其有效范围只限于在函数之中，函数执行完了就没了。说白了，局部变量只能在函数中使用，函数之外是不能使用函数之内定义的变量的。")]),t._v(" "),v("p",[t._v("（2）调用函数")]),t._v(" "),v("ul",[v("li",[t._v("直接调用")])]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("函数名(实参1, 实参2, ... , 实参n);\n")])])]),v("ul",[v("li",[v("p",[t._v("在表达式中调用")]),t._v(" "),v("p",[t._v("  在表达式中调用，一般用于“有返回值的函数”，然后函数的返回值会参与表达式的计算。")])])]),t._v(" "),v("p",[t._v("例子：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("function addSum(a, b) \n        {\n            var sum = a + b;\n            return sum;\n        }\n        //调用函数\n        var n = addSum(1, 2) + 100;\n")])])]),v("ul",[v("li",[v("p",[t._v("在超链接中调用")]),t._v(" "),v("p",[t._v("  当用户点击超链接时，就会调用该函数。")])])]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v('<a href="javascript:函数名"></a>\n')])])]),v("ul",[v("li",[t._v("在事件中调用")])]),t._v(" "),v("p",[t._v("  鼠标移动是一个事件、鼠标单击也是一个事件，类似的事件很多。当一个事件产生的时候，我们就可以调用某个函数来针对这个事件作出响应。")]),t._v(" "),v("p",[t._v("例子：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v(' <script>\n        function test()\n        {\n            alert("函数被调用了~");\n        }\n    <\/script>\n</head>\n<body>\n    <button onclick= "test()">点击按钮</button>\n</body>\n\n')])])]),v("p",[t._v("2、内置函数")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("函数")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("parseInt()")]),t._v(" "),v("td",[t._v("提取字符串中的数字，只限提取整数")])]),t._v(" "),v("tr",[v("td",[t._v("parseFloat()")]),t._v(" "),v("td",[t._v("提取字符串中的数字，可以提取小数")])]),t._v(" "),v("tr",[v("td",[t._v("isFinite()")]),t._v(" "),v("td",[t._v("判断某一个数是否是一个有限数值")])]),t._v(" "),v("tr",[v("td",[t._v("isNaN()")]),t._v(" "),v("td",[t._v("判断一个数是否是NaN值")])]),t._v(" "),v("tr",[v("td",[t._v("escape()")]),t._v(" "),v("td",[t._v("对字符串进行编码")])]),t._v(" "),v("tr",[v("td",[t._v("unescape()")]),t._v(" "),v("td",[t._v("对字符串进行解码")])]),t._v(" "),v("tr",[v("td",[t._v("eval()")]),t._v(" "),v("td",[t._v("把一个字符串当做一个表达式一样去执行")])])])]),t._v(" "),v("h2",{attrs:{id:"数组"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),v("p",[t._v("  数组，就是将多个元素（通常是同一类型）按一定顺序排列放到一个集合中，那么这个集合我们就称之为数组。")]),t._v(" "),v("p",[t._v("  数组就类似一个储物柜，储物柜有按顺序排好的小储物箱，每个小储物箱都有一个序号，可以放置很多东西，同时我们也可以按照序号取东西出来。")]),t._v(" "),v("p",[t._v("一、"),v("b",[t._v("创建数组的4种方法：")])]),t._v(" "),v("p",[t._v("1、自面量创建 var arr = [ ];")]),t._v(" "),v("p",[t._v("2、构造函数方法创建数组，new一个数组创建 var arr = new Array();")]),t._v(" "),v("p",[t._v("3、也是采用构造函数创建数组对象，不过设置了初始长度：var arr = new Array(5);")]),t._v(" "),v("p",[t._v('4、也是采用构造函数创建数组对象，且在创建的同时给它赋予了初始值“5”：\nvar arr = new Array("5");')]),t._v(" "),v("p",[t._v("二、"),v("b",[t._v("数组的获取")])]),t._v(" "),v("p",[t._v("  想要获取数组某一项的值，我们都是使用“下标”的方式来获取。")]),t._v(" "),v("p",[t._v("注意：数组的下标是从0开始的，而不是从1开始的")]),t._v(" "),v("p",[t._v("例子：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v('var arr = ["HTML","CSS", "JavaScript"];\n')])])]),v("p",[v("code",[t._v("arr[0]")]),t._v('表示获取第1项的值"HTML"。'),v("code",[t._v("arr[1]")]),t._v('表示获取第2项的值"CSS"，以此类推。')]),t._v(" "),v("p",[t._v("tips:可以使用length属性来获取数组的长度。语法"),v("code",[t._v("数组名.length")]),t._v("。")]),t._v(" "),v("p",[t._v("三、"),v("b",[t._v("数组方法")])]),t._v(" "),v("p",[t._v("   常见的数组方法如下表：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方法")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("push")]),t._v(" "),v("td",[t._v("往数组最后一个位置追加元素")])]),t._v(" "),v("tr",[v("td",[t._v("unshift")]),t._v(" "),v("td",[t._v("往数组第一个位置追加元素")])]),t._v(" "),v("tr",[v("td",[t._v("pop")]),t._v(" "),v("td",[t._v("移除数组最后一个元素，并返回被移除的元素")])]),t._v(" "),v("tr",[v("td",[t._v("shift")]),t._v(" "),v("td",[t._v("shift 移除第一个元素，并返回被移除的元素")])]),t._v(" "),v("tr",[v("td",[t._v("splice")]),t._v(" "),v("td",[t._v("移除数组某个位置的元素，可以移除多个，并可以加替补元素")])]),t._v(" "),v("tr",[v("td",[t._v("slice")]),t._v(" "),v("td",[t._v("slice （顾头不顾尾）切割数组，返回新数组，不改变原数组")])]),t._v(" "),v("tr",[v("td",[t._v("concat")]),t._v(" "),v("td",[t._v("拼接数组，返回新数组，不改变原数组")])]),t._v(" "),v("tr",[v("td",[t._v("reverse")]),t._v(" "),v("td",[t._v("数组反转，返回新数组，会改变原数组")])]),t._v(" "),v("tr",[v("td",[t._v("sort")]),t._v(" "),v("td",[t._v("数组排序，返回新数组，会改变原数组")])]),t._v(" "),v("tr",[v("td",[t._v("join")]),t._v(" "),v("td",[t._v("把数组用字符串拼接，返回拼接字符串，不影响原数组")])]),t._v(" "),v("tr",[v("td",[t._v("tostring")]),t._v(" "),v("td",[t._v("把数组转出字符串")])]),t._v(" "),v("tr",[v("td",[t._v("indexof")]),t._v(" "),v("td",[t._v("查询某个元素的索引，不存在返回-1")])]),t._v(" "),v("tr",[v("td",[t._v("lastindexof")]),t._v(" "),v("td",[t._v("查询某个元素的最后一个索引位置")])]),t._v(" "),v("tr",[v("td",[t._v("forEach")]),t._v(" "),v("td",[t._v("遍历数组，会遍历数组的每一个元素")])]),t._v(" "),v("tr",[v("td",[t._v("filter")]),t._v(" "),v("td",[t._v("过滤数组，根据条件进行过滤，返回一个新数组，不影响原数组")])]),t._v(" "),v("tr",[v("td",[t._v("map")]),t._v(" "),v("td",[t._v("根据原数组，返回一个新数组，此数组结构发生改变")])]),t._v(" "),v("tr",[v("td",[t._v("some")]),t._v(" "),v("td",[t._v("用户查询数组中是否符合条件的元素，如果有返回true，没有返回false")])]),t._v(" "),v("tr",[v("td",[t._v("find")]),t._v(" "),v("td",[t._v("find 查找符合条件的某个元素，返回该元素对象")])]),t._v(" "),v("tr",[v("td",[t._v("findindex")]),t._v(" "),v("td",[t._v("find 查找符合条件的某个元素，返回该元素下标")])])])]),t._v(" "),v("p",[v("b",[t._v("基础方法")])]),t._v(" "),v("p",[t._v("1、push 往数组最后一个位置追加元素")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v(" var arr = [1,2,3,4,5,6]\n arr.push(7)\n console.log(arr)\n")])])]),v("p",[t._v("2、unshift 往数组第一个位置追加元素")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = [1,2,3,4,5,6]\narr.unshift(0)\nconsole.log(arr)\n")])])]),v("p",[t._v("3、pop移除数组最后一个元素，并返回被移除的元素")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = [1,2,3,4,5,6]\nvar res = arr.pop()\nconsole.log(arr)\nconsole.log(res)\n")])])]),v("p",[t._v("4、shift 移除第一个元素，并返回被移除的元素")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = [1, 2, 3, 4, 5, 6]\nvar res = arr.shift()\nconsole.log(arr)\nconsole.log(res)\n")])])]),v("p",[t._v("5、splice 移除数组某个位置的元素，可以移除多个，并可以加参数3替补元素")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v(" 参数1 表示开始删除的索引\n\n 参数2 表示删除的个数\n\n 参数3或4或5等等 表示要替补的元素\n")])])]),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = [1,2,3,4,5,6]\narr.splice(1,1,666)\nconsole.log(arr)\n")])])]),v("p",[t._v("6、slice （顾头不顾尾）切割数组，返回新数组，不改变原数组")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("参数1 表示切割开始的索引\n\n参数2 表示切割结束的索引\n")])])]),v("p",[t._v("注：如果只传一个参数的话，表示从这个索引位置切割到最后一个")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = ['a','b','c','d','e','f']\nvar res = arr.slice(0,5)\nconsole.log(arr)\nconsole.log(res)\n")])])]),v("p",[t._v("7、concat 拼接数组，返回新数组，不改变原数组")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = ['a', 'b', 'c', 'd', 'e', 'f']\nvar res1 = arr.concat(1,2,3)\n// 或者\nvar res2 = arr.concat([1,2,3])\nconsole.log(arr)\nconsole.log(res1)\nconsole.log(res2)\n")])])]),v("p",[t._v("8、reverse 数组反转，返回新数组，会改变原数组")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = ['a', 'b', 'c', 'd', 'e', 'f']\nvar res = arr.reverse()\nconsole.log(arr)\nconsole.log(res)\n")])])]),v("p",[t._v("9、sort 数组排序，返回新数组，会改变原数组")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = [5,2,3,7,5,9]\nvar res = arr.sort()\nconsole.log(arr)\nconsole.log(res)\n")])])]),v("p",[t._v("10、join 把数组用字符串拼接，返回拼接字符串，不影响原数组")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = ['a', 'b','c', 'd', 'e', 'f']\nvar res = arr.join('-')\nconsole.log(arr)\nconsole.log(res)\n")])])]),v("p",[t._v("11、tostring 把数组转出字符串")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = ['a', 'b','c', 'd', 'e', 'f']\nvar res = arr.toString()\nconsole.log(res)\n")])])]),v("p",[t._v("12、indexof 查询某个元素的索引，不存在返回-1（可以利用这个特性判断元素是否存在数组）")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = ['a', 'b','c', 'd', 'e', 'f']\nvar res1 = arr.indexOf('c')\nvar res2 = arr.indexOf('隔壁老陈')\nconsole.log(res1)\nconsole.log(res2)\n")])])]),v("p",[t._v("13、lastindexof 查询某个元素的最后一个索引位置")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = ['a', 'a','b','c', 'd', 'e', 'f']\nvar res = arr.lastIndexOf('a')\nconsole.log(res)\n")])])]),v("p",[v("b",[t._v("进阶方法")])]),t._v(" "),v("p",[t._v("1、forEach 遍历数组，会遍历数组的每一个元素")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = [{\nid: 1,\nname: '张三',\njob: '法外狂徒'\n},\n{\nid: 2,\nname: '李四',\njob: '电玩小子'\n},\n{\nid: 3,\nname: '王五',\njob: '隔壁老王'\n}]\narr.forEach(item => {console.log(item.job)})\n")])])]),v("p",[t._v("2、filter 过滤数组，根据条件进行过滤，返回一个新数组，不影响原数组")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = [{\nid: 1,\nname: '张三',\njob: '法外狂徒'\n},\n{\nid: 2,\nname: '李四',\njob: '电玩小子'\n},\n{\nid: 3,\nname: '王五',\njob: '隔壁老王'\n}]\nvar res = arr.filter(item => {\nreturn item.name === '张三'\n})\nconsole.log(res)\n")])])]),v("p",[t._v("3、map 根据原数组，返回一个新数组，此数组结构发生改变")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = [{\nid: 1,\nname: '张三',\njob: '法外狂徒'\n},\n{\nid: 2,\nname: '李四',\njob: '电玩小子'\n},\n{\nid: 3,\nname: '王五',\njob: '隔壁老王'\n}]\nvar res = arr.map(item => {\nreturn item.name\n})\n")])])]),v("p",[t._v("4、some 用户查询数组中是否符合条件的元素，如果有返回true，没有返回false")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = [{\nid: 1,\nname: '张三',\njob: '法外狂徒'\n},\n{\nid: 2,\nname: '李四',\njob: '电玩小子'\n},\n{\nid: 3,\nname: '王五',\njob: '隔壁老王'\n}]\nvar res1 = arr.some(item => {\nreturn item.id===2\n})\nvar res2 = arr.some(item => {\nreturn item.id===11\n})\nconsole.log(res1)\nconsole.log(res2)\n")])])]),v("p",[t._v("5、find 查找符合条件的某个元素，返回该元素对象")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("var arr = [{\nid: 1,\nname: '张三',\njob: '法外狂徒'\n},\n{\nid: 2,\nname: '李四',\njob: '电玩小子'\n},\n{\nid: 3,\nname: '王五',\njob: '隔壁老王'\n}]\nvar res = arr.find( item =>{\nreturn item.name = '张三'\n})\nconsole.log(res)\n")])])]),v("h2",{attrs:{id:"内置对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内置对象"}},[t._v("#")]),t._v(" 内置对象")]),t._v(" "),v("p",[t._v(" JavaScript中，常用的内置对象有3种；")]),t._v(" "),v("p",[t._v("分别是"),v("code",[t._v("字符串对象：String")]),t._v("、"),v("code",[t._v("日期对象：Date")]),t._v("和"),v("code",[t._v("数值对象：Math")]),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"_1-字符串对象-string"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-字符串对象-string"}},[t._v("#")]),t._v(" （1）字符串对象：String")]),t._v(" "),v("p",[t._v("1、使用length属性来获取字符串的长度。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("字符串名.length\n")])])]),v("p",[t._v("2、 使用"),v("b",[t._v("toLowerCase()")]),t._v("方法将大写字符串转化为小写字符串，")]),t._v(" "),v("p",[t._v("也可以使用"),v("b",[t._v("toUpperCase()")]),t._v("方法将小写字符串转化为大写字符串。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("字符串名.toLowerCase()\n字符串名.toUpperCase()\n")])])]),v("p",[t._v("3、使用charAt()方法来获取字符串中的某一个字符。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("字符串名.charAt(n)\n")])])]),v("p",[t._v("说明：字符串下标是从零开始的，用n来表示， n是整数，表示字符串中第n+1个字符。")]),t._v(" "),v("p",[t._v("4、使用substring()方法来截取字符串的某一部分。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("字符串名.substring(start, end)\n")])])]),v("p",[t._v("说明：start表示开始位置，end表示结束位置。start和end都是整数，一般都是从0开始，其中end大于start。")]),t._v(" "),v("p",[t._v("5、使用replace()方法来用一个字符串替换另外一个字符串的某一部分。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("字符串名.replace(原字符串, 替换字符串)\n字符串名.replace(正则表达式, 替换字符串)\n")])])]),v("p",[t._v("6、使用split()方法把一个字符串分割成一个数组，这个数组存放的是原来字符串的所有字符片段。有多少个片段，数组元素个数就是多少。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v('字符串名.split("分割符")\n')])])]),v("p",[t._v("7、使用indexOf()方法来找出“某个指定字符串”在字符串中首次出现的下标位置，也可以使用lastIndexOf()来找出“某个指定字符串”在字符串中最后出现的下标位置。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("字符串名.indexOf(指定字符串)\n字符串名.lastIndexOf(指定字符串)\n")])])]),v("p",[t._v("说明：如果字符串中包含“指定字符串”，indexOf()就会返回指定字符串首次出现的下标，")]),t._v(" "),v("p",[t._v("而lastIndexOf()就会返回指定字符串最后出现的下标；")]),t._v(" "),v("p",[t._v("如果字符串中不包含“指定字符串”，indexOf()或lastIndexOf()就会返回-1。")]),t._v(" "),v("h3",{attrs:{id:"_2-日期对象-date"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-日期对象-date"}},[t._v("#")]),t._v(" （2）日期对象：Date")]),t._v(" "),v("p",[t._v("  在JavaScript中，我们可以使用时间对象Date来处理时间。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("var 日期对象名 = new Date();\n")])])]),v("p",[t._v("  创建一个日期对象，必须使用new关键字。其中Date对象的方法有很多，主要分为两大类：getXxx()和setXxx()。getXxx()用于获取时间，setXxx()用于设置时间。")]),t._v(" "),v("p",[t._v("用于获取时间的getXxx()")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方法")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("getFullYear()")]),t._v(" "),v("td",[t._v("获取年份，取值为4位数字")])]),t._v(" "),v("tr",[v("td",[t._v("getMonth()")]),t._v(" "),v("td",[t._v("获取月份，取值为0（一月）到11（十二月）之间的整数")])]),t._v(" "),v("tr",[v("td",[t._v("getDay()")]),t._v(" "),v("td",[t._v("获取星期，取值为1~7之间的整数")])]),t._v(" "),v("tr",[v("td",[t._v("getDate()")]),t._v(" "),v("td",[t._v("获取日数，取值为1~31之间的整数")])]),t._v(" "),v("tr",[v("td",[t._v("getHours()")]),t._v(" "),v("td",[t._v("获取小时数，取值为0~23之间的整数")])]),t._v(" "),v("tr",[v("td",[t._v("getMinutes()")]),t._v(" "),v("td",[t._v("获取分钟数，取值为0~59之间的整数")])]),t._v(" "),v("tr",[v("td",[t._v("getSeconds()")]),t._v(" "),v("td",[t._v("获取秒数，取值为0~59之间的整数")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("tips：getMonth()方法返回值是0（一月）到11（十二月）之间的整数，所以必须加上1，这样月份才正确。"),v("br"),t._v("\n获取当前的“日”，不是使用getDay()，而是使用getDate();getDay()是获取星期的。")])]),t._v(" "),v("p",[t._v("用于设置时间的setXxx()")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方法")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("setFullYear()")]),t._v(" "),v("td",[t._v("设置年、月、日")])]),t._v(" "),v("tr",[v("td",[t._v("setMonth()")]),t._v(" "),v("td",[t._v("设置月、日")])]),t._v(" "),v("tr",[v("td",[t._v("setDate()")]),t._v(" "),v("td",[t._v("设置日")])]),t._v(" "),v("tr",[v("td",[t._v("setHours()")]),t._v(" "),v("td",[t._v("设置时、分、秒、毫秒")])]),t._v(" "),v("tr",[v("td",[t._v("setMinutes()")]),t._v(" "),v("td",[t._v("设置分、秒、毫秒")])]),t._v(" "),v("tr",[v("td",[t._v("setSeconds()")]),t._v(" "),v("td",[t._v("设置秒、毫秒")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("tips： getFullYear()只能获取年，但setFullYear()却可以同时设置年、月、日。同理，setMonth()和setDate()也有这个特点。")])]),t._v(" "),v("h3",{attrs:{id:"_3-数学对象-math"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-数学对象-math"}},[t._v("#")]),t._v(" （3）数学对象：Math")]),t._v(" "),v("p",[t._v("  Math对象跟其他对象不一样，我们不需要使用new关键字来创造，而是直接使用它的属性和方法就行。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("Math.属性\nMath.方法\n")])])]),v("p",[t._v("常见Math对象的属性如下表：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("属性")]),t._v(" "),v("th",[t._v("说明")]),t._v(" "),v("th",[t._v("对应的数学形式")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("PI")]),t._v(" "),v("td",[t._v("圆周率\tπ")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("LN2")]),t._v(" "),v("td",[t._v("2的自然对数")]),t._v(" "),v("td",[t._v("ln(2)")])]),t._v(" "),v("tr",[v("td",[t._v("LN10")]),t._v(" "),v("td",[t._v("10的自然对数")]),t._v(" "),v("td",[t._v("ln(10)")])]),t._v(" "),v("tr",[v("td",[t._v("LOG2E")]),t._v(" "),v("td",[t._v("以2为底的e的对数")]),t._v(" "),v("td",[t._v("log2e")])]),t._v(" "),v("tr",[v("td",[t._v("LOG10E")]),t._v(" "),v("td",[t._v("以10为底的e的对数")]),t._v(" "),v("td",[t._v("log10e")])]),t._v(" "),v("tr",[v("td",[t._v("SQRT2")]),t._v(" "),v("td",[t._v("2的平方根")]),t._v(" "),v("td",[t._v("√2")])]),t._v(" "),v("tr",[v("td",[t._v("SQRT1_2")]),t._v(" "),v("td",[t._v("2的平方根的倒数")]),t._v(" "),v("td",[t._v("1/√2")])])])]),t._v(" "),v("p",[t._v("例子：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("120*Math.PI/180   //120°\n")])])]),v("p",[t._v("常用Math对象的方法如下表：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方法")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("max(a,b,…,n)")]),t._v(" "),v("td",[t._v("返回一组数中的最大值")])]),t._v(" "),v("tr",[v("td",[t._v("min(a,b,…,n)")]),t._v(" "),v("td",[t._v("返回一组数中的最小值")])]),t._v(" "),v("tr",[v("td",[t._v("sin(x)")]),t._v(" "),v("td",[t._v("正弦")])]),t._v(" "),v("tr",[v("td",[t._v("cos(x)")]),t._v(" "),v("td",[t._v("余弦")])]),t._v(" "),v("tr",[v("td",[t._v("tan(x)")]),t._v(" "),v("td",[t._v("正切")])]),t._v(" "),v("tr",[v("td",[t._v("asin(x)")]),t._v(" "),v("td",[t._v("反正弦")])]),t._v(" "),v("tr",[v("td",[t._v("acos(x)")]),t._v(" "),v("td",[t._v("反余弦")])]),t._v(" "),v("tr",[v("td",[t._v("atan(x)")]),t._v(" "),v("td",[t._v("反正切")])]),t._v(" "),v("tr",[v("td",[t._v("atan2(y, x)")]),t._v(" "),v("td",[t._v("反正切（注意y、x顺序）")])]),t._v(" "),v("tr",[v("td",[t._v("floor(x)")]),t._v(" "),v("td",[t._v("向下取整")])]),t._v(" "),v("tr",[v("td",[t._v("ceil(x)")]),t._v(" "),v("td",[t._v("向上取整")])]),t._v(" "),v("tr",[v("td",[t._v("random()")]),t._v(" "),v("td",[t._v("生成随机数")])]),t._v(" "),v("tr",[v("td",[t._v("abs(x)")]),t._v(" "),v("td",[t._v("返回x的绝对值")])]),t._v(" "),v("tr",[v("td",[t._v("sqrt(x)")]),t._v(" "),v("td",[t._v("返回x的平方根")])])])]),t._v(" "),v("p",[t._v("常见例子：")]),t._v(" "),v("p",[t._v("1、生成0~m之间的随机数")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("Math.random()*m\n")])])]),v("p",[t._v("2、生成0到m之间的随机整数")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("Math.floor(Math.random()*(m+1))\n")])])]),v("p",[t._v("3、生成n到m之间的随机整数（包括n和m）")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("Math.floor(Math.random()*(m-n+1))+n\n")])])]),v("h2",{attrs:{id:"dom篇"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dom篇"}},[t._v("#")]),t._v(" DOM篇")]),t._v(" "),v("p",[t._v("  DOM，全称“Document Object Model（文档对象模型）”，它是由W3C定义的一个标准。简单总结就是：DOM操作，可以简单理解成“元素操作”。")]),t._v(" "),v("p",[t._v("  DOM节点共有12种类型，常见的只有3种：")]),t._v(" "),v("p",[t._v("（1）元素节点")]),t._v(" "),v("p",[t._v("（2）属性节点")]),t._v(" "),v("p",[t._v("（3）文本节点")]),t._v(" "),v("p",[t._v(" 我们可以使用nodeType属性来判断一个节点的类型。例如：元素节点的nodeType为"),v("code",[t._v("1")]),t._v(",属性节点的nodeType为"),v("code",[t._v("2")]),t._v(",\n文本节点的nodeType为"),v("code",[t._v("3")]),t._v("。")]),t._v(" "),v("blockquote",[v("p",[t._v("tips:"),v("br"),t._v("（1）一个元素就是一个节点，这个节点称之为“元素节点”。"),v("br"),t._v("\n（2）属性节点和文本节点看起来像是元素节点的一部分，但实际上，它们是独立的节点，并不属于元素节点。"),v("br"),t._v("\n（3）只有元素节点才可以拥有子节点，属性节点和文本节点都无法拥有子节点。")])]),t._v(" "),v("p",[t._v("一、"),v("b",[t._v("DOM主要元素操作有：")]),t._v("获取元素，创建元素、插入元素、删除元素、复制元素和替换元素。")]),t._v(" "),v("p",[t._v("1、获取元素；准确来说，就是获取“元素节点。")]),t._v(" "),v("p",[t._v("常用的获取方式如下：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方式")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v('document.getElementById("id名")')]),t._v(" "),v("td",[t._v("通过id来选中元素")])]),t._v(" "),v("tr",[v("td",[t._v('document. getElementsByTagName("标签名")')]),t._v(" "),v("td",[t._v("通过标签名来选中元素；getElementsByTagName()方法中“elements”是一个复数，写的时候别漏掉了“s”。这是因为getElementsByTagName()获取的是多个元素（即集合），而getElementById()获取的仅仅是一个元素。")])]),t._v(" "),v("tr",[v("td",[t._v('document. getElementsByClassName("类名")')]),t._v(" "),v("td",[t._v("通过class来选中元素；getElementsByClassName()方法中“elements”是一个复数，跟getElementsByTagName相似，getElementsByClassName()获取的也是一个类数组。")])]),t._v(" "),v("tr",[v("td",[t._v('document.querySelector("选择器")')]),t._v(" "),v("td",[t._v("表示选取满足选择条件的第1个元素")])]),t._v(" "),v("tr",[v("td",[t._v('document.querySelectorAll("选择器")')]),t._v(" "),v("td",[t._v("表示选取满足条件的所有元素")])]),t._v(" "),v("tr",[v("td",[t._v('document.getElementsByName("name名")')]),t._v(" "),v("td",[t._v("通过name属性来获取表单元素")])])])]),t._v(" "),v("p",[t._v("2、创建元素")]),t._v(" "),v("p",[t._v("  在JavaScript中，我们使用createElement()来创建一个元素节点，也可以使用createTextNode()来创建一个文本节点，然后可以将元素节点与文本节点“组装”成为我们平常所看到的“有文本内容的元素”。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('var e1 = document.createElement("元素名");      //创建元素节点\nvar txt = document.createTextNode("文本内容");   //创建文本节点\ne1.appendChild(txt);                          //把文本节点插入元素节点中\ne2.appendChild(e1);                          //把组装好的元素插入已存在的元素中\n')])])]),v("p",[t._v("步骤：")]),t._v(" "),v("p",[t._v("① 创建元素节点：createElement()")]),t._v(" "),v("p",[t._v("② 创建文本节点：createTextNode()")]),t._v(" "),v("p",[t._v("③ 把文本节点插入元素节点：appendChild()")]),t._v(" "),v("p",[t._v("④ 把组装好的元素插入到已有元素中：appendChild()")]),t._v(" "),v("p",[t._v("元素插入方式：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方式")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("appendChild()")]),t._v(" "),v("td",[t._v("把一个新元素插入到父元素的内部子元素的 末尾")])]),t._v(" "),v("tr",[v("td",[t._v("insertBefore()")]),t._v(" "),v("td",[t._v("将一个新元素插入到父元素中的某一个子元素“之前”")])])])]),t._v(" "),v("p",[t._v("3、 删除元素；\n使用removeChild()方法来删除父元素下的某个子元素。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('var e1 = document.getElementById("id名");\ndocument.body.removeChild(e1)\n')])])]),v("p",[t._v("4、复制元素；使用cloneNode()方法来实现复制元素。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("ele.cloneNode()//参数ele表示被复制的元素\n")])])]),v("p",[t._v("5、替换元素；使用replaceChild()方法来实现替换元素。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("f.replaceChild(new,old);//f表示父元素，new表示新子元素，old表示旧子元素。\n")])])]),v("p",[t._v("二、"),v("b",[t._v("DOM主要属性操作（对象方法）有：")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方法")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("getAttribute()")]),t._v(" "),v("td",[t._v("获取元素的某个属性的值")])]),t._v(" "),v("tr",[v("td",[t._v("setAttribute()")]),t._v(" "),v("td",[t._v("设置元素的某个属性的值")])]),t._v(" "),v("tr",[v("td",[t._v("removeAttribute()")]),t._v(" "),v("td",[t._v("删除元素的某个属性")])]),t._v(" "),v("tr",[v("td",[t._v("hasAttribute()")]),t._v(" "),v("td",[t._v("判断元素是否含有某个属性")])])])]),t._v(" "),v("p",[t._v("1、getAttribute()方法来获取元素的某个属性的值。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v('ele.getAttribute("attr")//ele是元素名，attr是属性名\n')])])]),v("p",[t._v('tips :ele.attr也可以获取到attr的值，等价于ele.getAttribute("attr")，但针对自定义的属性，就无法通过ele.attr获取，只能通过ele.getAttribute("attr")。')]),t._v(" "),v("p",[t._v(" 例子：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('<html>\n<head>\n    <meta charset="utf-8" />\n    <title></title>\n    <script>\n        window.onload = function () \n        {\n            var oBtn = document.getElementById("btn");\n            oBtn.onclick = function () \n            {\n                //alert(oBtn.data);//undefined\n                alert(oBtn.getAttribute("data"));//JavaScript\n            };\n        }\n    <\/script>\n</head>\n<body>\n    <input id="btn" type="button" value="获取" data="JavaScript"/>\n</body>\n</html>\n\n')])])]),v("p",[t._v("2、setAttribute()方法来设置元素的某个属性的值。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v('ele.setAttribute("attr","值")//ele是元素名，attr是属性名\n')])])]),v("p",[t._v("3、removeAttribute()方法来删除元素的某个属性。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v('ele.removeAttribute("attr")\n')])])]),v("p",[t._v("4、hasAttribute()方法来判断元素是否含有某个属性。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v('ele.hasAttribute("attr")\n')])])]),v("p",[t._v("tips：hasAttribute()方法返回一个布尔值，如果包含该属性，则返回true。")]),t._v(" "),v("p",[t._v("三、"),v("b",[t._v("设置CSS（style）属性值")])]),t._v(" "),v("p",[t._v("  使用style对象来设置一个CSS属性的值，其实就是在元素的style属性来添加样式，这个设置的是“行内样式”。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v('DOM对象.style.css属性名 = "值";\n')])])]),v("p",[t._v('说明：DOM对象指通过document获取的对象，例如： var test = document.getElementById("id名");')]),t._v(" "),v("p",[t._v("css属性名，如：width、height、background-color.....等等。")]),t._v(" "),v("p",[t._v("四、"),v("b",[t._v("DOM遍历")])]),t._v(" "),v("p",[t._v("  DOM遍历，可以简单理解为“查找元素”。举个例子，如果你使用getElementById()等方法获取一个元素，然后又想得到该元素的父元素、子元素，甚至是下一个兄弟元素，这就是DOM遍历。")]),t._v(" "),v("p",[t._v("对于DOM遍历，可以分为以下3种情况:")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("语法")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("DOM对象.parentNode")]),t._v(" "),v("td",[t._v("获得某个元素的父元素")])]),t._v(" "),v("tr",[v("td",[t._v("DOM对象.childNodes")]),t._v(" "),v("td",[t._v("获得父元素中的所有子元素")])]),t._v(" "),v("tr",[v("td",[t._v("DOM对象 .previousSibling")]),t._v(" "),v("td",[t._v("获得兄弟元素")])])])]),t._v(" "),v("p",[t._v("五、"),v("b",[t._v(" innerHTML和innerText")])]),t._v(" "),v("p",[t._v("  innerHTML获取的是元素内部所有的内容，而innerText获取的仅仅是文本内容。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('DOM对象.innerHTML=新的HTML;\nDOM对象.innerHTML="新文本";\nDOM对象.innerText="新文本";\n')])])]),v("h2",{attrs:{id:"bom篇"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#bom篇"}},[t._v("#")]),t._v(" BOM篇")]),t._v(" "),v("p",[t._v("  BOM 全称：Browser Object Model, 浏览器对象模型。")]),t._v(" "),v("p",[t._v("BOM主要如下：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("属性")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("window对象")]),t._v(" "),v("td",[t._v("js中的顶级对象，所有定义在全局作用域中的变量、函数都会变成window对象的属性和方法，在调用的时候可以省略window。")])]),t._v(" "),v("tr",[v("td",[t._v("frames")]),t._v(" "),v("td",[t._v("如果页面中包含框架，则每个框架都拥有自己的 window 对象，并且保存在 frames 集合中。")])]),t._v(" "),v("tr",[v("td",[t._v("location对象")]),t._v(" "),v("td",[t._v("保存当前文档信息，将URL解析为独立片段")])]),t._v(" "),v("tr",[v("td",[t._v("screen对象")]),t._v(" "),v("td",[t._v("存放着有关显示浏览器屏幕的信息")])]),t._v(" "),v("tr",[v("td",[t._v("navigator对象")]),t._v(" "),v("td",[t._v("navigator对象就是判断用户的浏览器以及操作系统")])]),t._v(" "),v("tr",[v("td",[t._v("history对象")]),t._v(" "),v("td",[t._v("保存浏览器的历史记录")])])])]),t._v(" "),v("p",[t._v("1、window对象")]),t._v(" "),v("p",[t._v("（1）window对象下的子对象")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("window子对象")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("window.open()")]),t._v(" "),v("td",[t._v("打开新窗口")])]),t._v(" "),v("tr",[v("td",[t._v("window.close()")]),t._v(" "),v("td",[t._v("关闭当前窗口")])]),t._v(" "),v("tr",[v("td",[t._v("window.moveTo()")]),t._v(" "),v("td",[t._v("移动当前窗口")])]),t._v(" "),v("tr",[v("td",[t._v("window.resizeTo()")]),t._v(" "),v("td",[t._v("调整当前窗口的尺寸")])]),t._v(" "),v("tr",[v("td",[t._v("window.onload()")]),t._v(" "),v("td",[t._v("当页面加载时")])]),t._v(" "),v("tr",[v("td",[t._v("window.onscroll()")]),t._v(" "),v("td",[t._v("当页面滚动时")])]),t._v(" "),v("tr",[v("td",[t._v("window.onresize()")]),t._v(" "),v("td",[t._v("页面重新定义大小时")])])])]),t._v(" "),v("p",[t._v("（2）window对象常用方法（一般会省略window）")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方法")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("alert()")]),t._v(" "),v("td",[t._v("提示对话框")])]),t._v(" "),v("tr",[v("td",[t._v("confirm()")]),t._v(" "),v("td",[t._v("判断对话框")])]),t._v(" "),v("tr",[v("td",[t._v("prompt()")]),t._v(" "),v("td",[t._v("输入对话框")])]),t._v(" "),v("tr",[v("td",[t._v("open()")]),t._v(" "),v("td",[t._v("打开窗口")])]),t._v(" "),v("tr",[v("td",[t._v("close()")]),t._v(" "),v("td",[t._v("关闭窗口")])]),t._v(" "),v("tr",[v("td",[t._v("setTimeout()")]),t._v(" "),v("td",[t._v("开启“一次性”定时器")])]),t._v(" "),v("tr",[v("td",[t._v("clearTimeout()")]),t._v(" "),v("td",[t._v("关闭“一次性”定时器")])]),t._v(" "),v("tr",[v("td",[t._v("setInterval()")]),t._v(" "),v("td",[t._v("开启“重复性”定时器")])]),t._v(" "),v("tr",[v("td",[t._v("clearInterval()")]),t._v(" "),v("td",[t._v("关闭“重复性”定时器")])])])]),t._v(" "),v("p",[t._v("2、frames")]),t._v(" "),v("p",[t._v("  在 frames 集合中，可以通过数值索引（从0开始，从左至右，从上到下）或者框架名称来访问相应的 window 对象。")]),t._v(" "),v("p",[t._v("例子：")]),t._v(" "),v("p",[t._v("每个 window 对象都有一个 name 属性，其中包含框架的名称。")]),t._v(" "),v("div",{staticClass:"language-coffeescript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-coffeescript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("frameset"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("frame src"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"frame.htm"')]),t._v(" name"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"topFrame"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("frameset cols"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"50%,50%"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n        "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("frame src"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(" name"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"leftFrame"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n        "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("frame src"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),t._v(" name"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rightFrame"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("frameset"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("frameset"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),v("p",[t._v('说明：可以通过 window.frames[0] 或者 window.frames["topFrame"] 来引用上方的框架。')]),t._v(" "),v("p",[t._v("3、location对象")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("location的属性")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("location.href")]),t._v(" "),v("td",[t._v("返回当前页面完整的URL ,修改这个属性，即跳转新页面")])]),t._v(" "),v("tr",[v("td",[t._v("location.hash")]),t._v(" "),v("td",[t._v("返回URL中的hash（#号后跟零或多个字符）")])]),t._v(" "),v("tr",[v("td",[t._v("location.host")]),t._v(" "),v("td",[t._v("返回服务器名称和端口号")])]),t._v(" "),v("tr",[v("td",[t._v("location.port")]),t._v(" "),v("td",[t._v("返回服务器端口号")])]),t._v(" "),v("tr",[v("td",[t._v("location.pathname")]),t._v(" "),v("td",[t._v("返回URL中的目录和文件名")])]),t._v(" "),v("tr",[v("td",[t._v("location.hostname")]),t._v(" "),v("td",[t._v("返回不带端口号的服务器名称")])]),t._v(" "),v("tr",[v("td",[t._v("location.protocol")]),t._v(" "),v("td",[t._v("返回页面使用的协议（http://或https://)")])]),t._v(" "),v("tr",[v("td",[t._v("location.search")]),t._v(" "),v("td",[t._v("返回URL的查询字符串，字符串以问号开头")])])])]),t._v(" "),v("p",[t._v("4、screen对象")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("screen的属性")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("screen.width")]),t._v(" "),v("td",[t._v("屏幕宽度，以像素为单位")])]),t._v(" "),v("tr",[v("td",[t._v("screen.availWidth")]),t._v(" "),v("td",[t._v("屏幕的可用宽度，以像素为单位")])]),t._v(" "),v("tr",[v("td",[t._v("screen.height")]),t._v(" "),v("td",[t._v("屏幕高度，以像素为单位")])])])]),t._v(" "),v("p",[t._v("5、navigator对象")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("navigator的属性")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("navigator.appName")]),t._v(" "),v("td",[t._v("浏览器名称")])]),t._v(" "),v("tr",[v("td",[t._v("navigator.appVersion")]),t._v(" "),v("td",[t._v("浏览器版本")])]),t._v(" "),v("tr",[v("td",[t._v("navigator.language")]),t._v(" "),v("td",[t._v("浏览器设置的语言")])]),t._v(" "),v("tr",[v("td",[t._v("navigator.platform")]),t._v(" "),v("td",[t._v("操作系统类型")])]),t._v(" "),v("tr",[v("td",[t._v("navigator.userAgent")]),t._v(" "),v("td",[t._v("浏览器设定的User-Agent字符串")])]),t._v(" "),v("tr",[v("td",[t._v("window.navigator.online")]),t._v(" "),v("td",[t._v("是否联网")])])])]),t._v(" "),v("p",[t._v("6、history对象")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("history的属性")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("history.back()")]),t._v(" "),v("td",[t._v("与在浏览器点击后退按钮相同")])]),t._v(" "),v("tr",[v("td",[t._v("history.forward()")]),t._v(" "),v("td",[t._v("与在浏览器中点击按钮向前相同")])]),t._v(" "),v("tr",[v("td",[t._v("history.go(参数)")]),t._v(" "),v("td",[t._v("前进后退功能，参数如果是1前进一个页面，如果是-1后退一个页面，如果是N则前进或后退N个页面")])]),t._v(" "),v("tr",[v("td",[t._v("history.length()")]),t._v(" "),v("td",[t._v("保存历史记录的数量")])])])]),t._v(" "),v("h2",{attrs:{id:"事件处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件处理"}},[t._v("#")]),t._v(" 事件处理")]),t._v(" "),v("p",[t._v("  事件一般是用户对页面的一些“小动作”引起的，例如按下鼠标、移动鼠标等，这些都会触发相应的一个事件。")]),t._v(" "),v("p",[t._v("一、"),v("b",[t._v("JavaScript常见的事件共有以下5种。")])]),t._v(" "),v("p",[t._v("（1）鼠标事件")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("事件")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("onclick")]),t._v(" "),v("td",[t._v("鼠标单击事件")])]),t._v(" "),v("tr",[v("td",[t._v("onmouseover")]),t._v(" "),v("td",[t._v("鼠标移入事件")])]),t._v(" "),v("tr",[v("td",[t._v("onmouseout")]),t._v(" "),v("td",[t._v("鼠标移出事件")])]),t._v(" "),v("tr",[v("td",[t._v("onmousedown")]),t._v(" "),v("td",[t._v("鼠标按下事件")])]),t._v(" "),v("tr",[v("td",[t._v("onmouseup")]),t._v(" "),v("td",[t._v("鼠标松开事件")])]),t._v(" "),v("tr",[v("td",[t._v("onmousemove")]),t._v(" "),v("td",[t._v("鼠标移动事件")])])])]),t._v(" "),v("p",[t._v("（2）键盘事件")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("事件")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("onkeydown")]),t._v(" "),v("td",[t._v("键盘按下")])]),t._v(" "),v("tr",[v("td",[t._v("onkeyup")]),t._v(" "),v("td",[t._v("键盘松开")])])])]),t._v(" "),v("p",[t._v("（3）表单事件")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("事件")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("onfocus/onblur")]),t._v(" "),v("td",[t._v("获取焦点时触发的事件/失去焦点时触发的事件")])]),t._v(" "),v("tr",[v("td",[t._v("onselect")]),t._v(" "),v("td",[t._v("选中“单行文本框”或“多行文本框”中的内容时触发")])]),t._v(" "),v("tr",[v("td",[t._v("onchange")]),t._v(" "),v("td",[t._v("当value改变时触发")])]),t._v(" "),v("tr",[v("td",[t._v("onsubmit")]),t._v(" "),v("td",[t._v("表单提交时触发")])])])]),t._v(" "),v("p",[t._v("（4）编辑事件")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("事件")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("oncopy")]),t._v(" "),v("td",[t._v("用来防止页面内容被复制")])]),t._v(" "),v("tr",[v("td",[t._v("onselectstart")]),t._v(" "),v("td",[t._v("用来防止页面内容被选取")])]),t._v(" "),v("tr",[v("td",[t._v("oncontextmenu")]),t._v(" "),v("td",[t._v("用来禁止鼠标右键")])])])]),t._v(" "),v("p",[t._v("（5）页面事件")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("事件")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("onload")]),t._v(" "),v("td",[t._v("表示文档加载完成后再执行的一个事件")])]),t._v(" "),v("tr",[v("td",[t._v("onbeforeunload")]),t._v(" "),v("td",[t._v("表示离开页面之前触发的一个事件")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("tips:页面时间是通过windo来调用的，例如： "),v("code",[t._v("window.onload = function (){.....}")])])]),t._v(" "),v("p",[v("b",[t._v("在JavaScript中，调用事件的方式有两种:")])]),t._v(" "),v("p",[t._v("1、在script标签中调用")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("DOM对象.事件名 = function()\n{\n    ……\n};\n")])])]),v("p",[t._v("2、在元素中调用")]),t._v(" "),v("p",[t._v(" 例子：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v(' <input type="button" onclick="alert(\'隔壁老陈\')" value="弹窗" />\n')])])]),v("p",[t._v("二、"),v("b",[t._v("事件监听器【addEventListener()】")])]),t._v(" "),v("p",[t._v("1、绑定事件")]),t._v(" "),v("p",[t._v(" 通过addEventListener()方法来为一个元素添加事件，称之为“绑定事件”。")]),t._v(" "),v("p",[t._v(" 语法：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("DOM对象.addEventListener(type , fn , false)\n")])])]),v("blockquote",[v("p",[t._v("说明："),v("br"),t._v("\n type是一个字符串，指的是事件类型。例如单击事件用click，鼠标移入用mouseover等。一定要注意，这个事件类型是不需要加上“on”前缀的。"),v("br"),t._v("\n fn是一个函数名，或者一个匿名函数。"),v("br"),t._v("\n false表示事件冒泡阶段调用。")])]),t._v(" "),v("p",[t._v("例子：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v('DOM对象.addEventListener("click", function () {.....}, false);\n')])])]),v("p",[t._v("2、event对；每一个事件，都有一个对应的event对象")]),t._v(" "),v("p",[t._v("例如：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('DOM对象.addEventListener("click", function (event)\n {alert(event.type);}, false);\n')])])]),v("p",[t._v("event对象的属性:")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("属性")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("type")]),t._v(" "),v("td",[t._v("事件类型")])]),t._v(" "),v("tr",[v("td",[t._v("keyCode")]),t._v(" "),v("td",[t._v("键码值")])]),t._v(" "),v("tr",[v("td",[t._v("shiftKey")]),t._v(" "),v("td",[t._v("是否按下shift键")])]),t._v(" "),v("tr",[v("td",[t._v("ctrlKey")]),t._v(" "),v("td",[t._v("是否按下Ctrl键")])]),t._v(" "),v("tr",[v("td",[t._v("altKey")]),t._v(" "),v("td",[t._v("是否按下Alt键")])])])]),t._v(" "),v("h2",{attrs:{id:"this指向"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#this指向"}},[t._v("#")]),t._v(" this指向")]),t._v(" "),v("p",[t._v("  this指向;简单来说:哪个DOM对象（元素节点）调用了this所在的函数，那么this指向的就是哪个DOM对象。")]),t._v(" "),v("p",[t._v("1、在函数体中，非显式或隐式地简单调用函数时，在严格模式下，函数内的 this 会被绑定到\nundefined 上，在非严格模式下则会被绑定到全局对象 window/global 上 。")]),t._v(" "),v("p",[t._v("2、一般使用 new 方法调用构造函数时，构造函数内的 this 会被绑定到新创建的对象上 。")]),t._v(" "),v("p",[t._v("3、一般通过 call/apply/bind 方法显式调用函数时，函数体内的this会被绑定到指定参数的对象\n上 。")]),t._v(" "),v("p",[t._v("4、一般通过上下文对象调用函数时，函数体内的this会被绑定到该对象上 。")]),t._v(" "),v("p",[t._v("5、在箭头函数中， this 的指向是由外层（函数或全局）作用域来决定的 。")]),t._v(" "),v("h2",{attrs:{id:"拓展建议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#拓展建议"}},[t._v("#")]),t._v(" 拓展建议")]),t._v(" "),v("p",[t._v("  ES6是 JavaScript 语言的下一代标准; "),v("b",[t._v("非常重要")]),t._v("，前端必学。")]),t._v(" "),v("p",[t._v("ES6重点简单概括：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("箭头函数()=>{}、拓展运算符...、模板字符串`${}`、结构赋值、promise...等等\n")])])]),v("ul",[v("li",[v("a",{attrs:{href:"https://wangdoc.com/es6/intro.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6教程"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://v2.cn.vuejs.org/v2/guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue教程"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://react.docschina.org/tutorial/tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("React教程"),v("OutboundLink")],1)])]),t._v(" "),v("blockquote",[v("p",[t._v("笔记小结语：我是隔壁老陈(微信:"),v("code",[t._v("CYJ138G")]),t._v(")，一个正在学习前端的小菜鸟，此笔记大部分从教程或者个人总结而来；可能存在知识点错误或者未完善的地方、希望大家能帮忙多修正和完善。后续可能会更新vue和react笔记。\n也希望大家能分享一下学习经验和心得，让我少走点弯路；谢谢。在此：祝大家前程似锦、未来熠熠生辉。")])])])}),[],!1,null,null,null);v.default=e.exports}}]);